[{"C:\\wamp\\www\\superchat\\src\\App.js":"1","C:\\wamp\\www\\superchat\\src\\index.js":"2","C:\\wamp\\www\\superchat\\src\\Pages\\Login\\LoginElements.js":"3","C:\\wamp\\www\\superchat\\src\\Pages\\Login\\index.js":"4","C:\\wamp\\www\\superchat\\src\\Pages\\Chatroom\\index.js":"5","C:\\wamp\\www\\superchat\\src\\Pages\\Chatroom\\ChatroomElements.js":"6","C:\\wamp\\www\\superchat\\src\\styles\\global.js":"7"},{"size":4436,"mtime":1611941771703,"results":"8","hashOfConfig":"9"},{"size":200,"mtime":1611782174552,"results":"10","hashOfConfig":"9"},{"size":2656,"mtime":1611852905085,"results":"11","hashOfConfig":"9"},{"size":828,"mtime":1611833248641,"results":"12","hashOfConfig":"9"},{"size":904,"mtime":1611832887908,"results":"13","hashOfConfig":"9"},{"size":1693,"mtime":1611937760624,"results":"14","hashOfConfig":"9"},{"size":552,"mtime":1611933791633,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"16s6hwx",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wamp\\www\\superchat\\src\\App.js",["31","32","33","34"],"import GlobalStyles from './styles/global';\nimport {useState} from 'react';\nimport logo from './Assets/Hive.png';\nimport light from './Assets/Light On.png';\nimport intro from './Assets/undraw_celebration_0jvk 1.png';\n\n\nimport firebase from 'firebase/app'; //firebase sdk\nimport 'firebase/firestore'; //firebase sdk\nimport 'firebase/auth'; //firebase sdk\n\nimport {useAuthState} from 'react-firebase-hooks/auth'; //firebase hooks\nimport 'firebase/firestore'; //firebase hooks\nimport 'firebase/auth'; //firebase hooks\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Chating, Chatmessages1 } from './Pages/Chatroom/ChatroomElements';\nimport { Welcome } from './Pages/Login/LoginElements';\n\n\n\n//Get files from registing Web app after creating project and \n//activating database and google auth\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBBCKRwFDD15ShuvFpzM1uFjuzwNfuBGR8\",\n    authDomain: \"superchat-3976c.firebaseapp.com\",\n    projectId: \"superchat-3976c\",\n    storageBucket: \"superchat-3976c.appspot.com\",\n    messagingSenderId: \"419127465748\",\n    appId: \"1:419127465748:web:ac49833b0d2a1f215c5401\",\n    measurementId: \"G-5104BX17BR\"\n})\n\n\nconst auth=firebase.auth();\nexport const firestore=firebase.firestore();\n\n\n\nfunction App() {\n\n  const[user]=useAuthState(auth);\n  \n\n  \n\n  return (\n    <>\n      <GlobalStyles/>\n   \n     \n      <section>\n     \n        \n                {user ? (\n                <>\n                <Chatroom/>\n                <SignOut>SignOut</SignOut>\n                </>) : <Login/>}\n            </section>\n           \n    </>\n  );\n}\nexport function ChatMessages(props) {\n  const{text,uid, photoURL}=props.message;\n   const messageClass=uid === auth.currentUser.uid ? 'sent' : 'received';\n  return (\n  <>\n  <Chatmessages1>\n    \n\n  <img src={photoURL}/>\n   <p >\n     \n     {text}\n   </p>\n   </Chatmessages1>\n   \n   </>\n  )\n} \nexport function Chatroom() {\n    \n    \n  const messageRef=firestore.collection('messages');\n  const query=messageRef.orderBy('createdAt').limit(25);\n\n  //listen to data hook\n  const [messages]=useCollectionData(query, {idField: 'id'})\n  console.log(messages);\n  const [formValue, setFormValue]=useState('');\n\n  const sendMessage = async(e)=>{\n    e.preventDefault();\n    const {uid, photoURL}=auth.currentUser;\n    if(formValue!==''){\n      await messageRef.add({\n        text: formValue,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        photoURL\n      })\n  \n      setFormValue('');\n    }else{\n      return(\n        \n        <span style={{color:'#D04040', position: 'absolute', fontSize:'18px', zIndex:'4'}}>Please write something</span>\n      )\n    }\n\n    }\n    \n  \n\n  return (\n    <>\n   \n      <Chating >\n      <h1>Say Something Nice</h1>\n      \n          {messages && messages.map(msg=><ChatMessages id=\"chatmessages\" key={msg.id} message={msg}/>)}\n          <form onSubmit={sendMessage}>\n            <input placeholder=\"Say somthing nice\" value={formValue} onChange={(e)=>setFormValue(e.target.value)}/>\n            <button type=\"submit\">Bustüêù</button>\n          </form>\n      </Chating>\n      \n      </>\n  )\n}\nexport function SignOut(){\nreturn auth.currentUser && (\n    <button style={{position: 'absolute',width:'245px', height:'50px',\n     margin:'20px 100px 0px 500px', border:'none', background:'#2F80ED',\n      color:'white', fontWeight:'bold', borderRadius:'5px', top:'200px'}}\n       onClick={()=>auth.signOut()}>Sign Out</button>\n)\n}\n\nexport function Login() {\nconst signInWithGoogle=()=>{\n    const provider=new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n}\n\nreturn (\n    <>\n    <Welcome>\n      <header>\n        <img src={logo}/>\n        <p>BEETHENEVER</p>\n      </header>\n      <div id=\"main\">\n        <section>\n          <img src={light} alt=\"light icon\"/>\n        <h1>Welcome to BEETHENEVER</h1>\n        <p>Demo login to try the app, sign in to Google to use it</p>\n        <a href=\"\">Demo login</a>\n        <button onClick={signInWithGoogle}>Sign in with Google</button>\n\n        </section>\n        <div id=\"right\">\n          <img src={intro} alt=\"people jumpin\"/>\n          {/* <h1>Tired of being bored?</h1> */}\n          <p>Join Beeger today and watch the time past in hours of joy and fun.</p>\n          <small><strong>BEETHANEVER</strong>\n-bigger than ever</small>\n        </div>\n        \n        \n        </div>\n    </Welcome>\n        \n    </>\n)\n}\n\nexport default App;\n","C:\\wamp\\www\\superchat\\src\\index.js",[],"C:\\wamp\\www\\superchat\\src\\Pages\\Login\\LoginElements.js",[],"C:\\wamp\\www\\superchat\\src\\Pages\\Login\\index.js",["35"],"C:\\wamp\\www\\superchat\\src\\Pages\\Chatroom\\index.js",["36","37","38","39"],"C:\\wamp\\www\\superchat\\src\\Pages\\Chatroom\\ChatroomElements.js",[],"C:\\wamp\\www\\superchat\\src\\styles\\global.js",[],{"ruleId":"40","severity":1,"message":"41","line":66,"column":10,"nodeType":"42","messageId":"43","endLine":66,"endColumn":22},{"ruleId":"44","severity":1,"message":"45","line":72,"column":3,"nodeType":"46","endLine":72,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":151,"column":9,"nodeType":"46","endLine":151,"endColumn":26},{"ruleId":"47","severity":1,"message":"48","line":159,"column":9,"nodeType":"46","endLine":159,"endColumn":20},{"ruleId":"40","severity":1,"message":"49","line":14,"column":12,"nodeType":"42","messageId":"43","endLine":14,"endColumn":19},{"ruleId":"40","severity":1,"message":"50","line":3,"column":9,"nodeType":"42","messageId":"43","endLine":3,"endColumn":22},{"ruleId":"40","severity":1,"message":"51","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":16},{"ruleId":"40","severity":1,"message":"52","line":34,"column":10,"nodeType":"42","messageId":"43","endLine":34,"endColumn":22},{"ruleId":"40","severity":1,"message":"41","line":36,"column":11,"nodeType":"42","messageId":"43","endLine":36,"endColumn":23},"no-unused-vars","'messageClass' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'SignOut' is defined but never used.","'useCollection' is defined but never used.","'firebase' is defined but never used.","'ChatMessages' is defined but never used."]